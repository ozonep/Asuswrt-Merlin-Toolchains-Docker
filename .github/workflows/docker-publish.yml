name: Build Asuswrt

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: "Manually trigger"
        required: false

env:
  TZ: Europe/Copenhagen
  TOOLCHAIN_BASE: /opt/toolchains
  DEBIAN_FRONTEND: noninteractive
  LANG: C.UTF-8

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization of environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo dpkg --add-architecture i386
          sudo add-apt-repository ppa:git-core/ppa -y
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install curl vim sudo libtool-bin cmake libproxy-dev uuid-dev liblzo2-dev autoconf autoconf-archive automake bash bison \
                       bzip2 diffutils file flex m4 g++ gawk groff-base libncurses5-dev libtool libslang2 make patch perl pkg-config shtool \
                       subversion tar texinfo zlib1g zlib1g-dev gettext libexpat1-dev libssl-dev cvs gperf unzip \
                       python2 libxml-parser-perl gcc-multilib gconf-editor libxml2-dev g++-multilib git gitk libncurses5 mtd-utils \
                      libncurses5-dev libvorbis-dev autopoint autogen sed build-essential intltool libglib2.0-dev \
                      xutils-dev lib32z1-dev lib32stdc++6 xsltproc gtk-doc-tools automake-1.15 locales libelf1:i386 gosu bc rsync python-is-python2
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo ln -s bash /bin/sh.bash 
          sudo mv /bin/sh.bash /bin/sh
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone --depth=1 https://github.com/SylphiaWindy/am-toolchains toolchain
          git clone --branch=master https://github.com/RMerl/asuswrt-merlin.ng merlin

      - name: Setting up toolchains
        run: |
          ln -s /workdir/toolchain/brcm-arm-hnd /opt/toolchains
          echo "export LD_LIBRARY_PATH=$LD_LIBRARY:/opt/toolchains/crosstools-arm-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/lib" >> ~/.profile
          echo "PATH=\$PATH:/opt/toolchains/crosstools-arm-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/bin" >> ~/.profile
          echo "PATH=\$PATH:/opt/toolchains/crosstools-aarch64-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/bin" >> ~/.profile

      - name: Build
        run: |
          # mv $GITHUB_WORKSPACE/1.patch /workdir/merlin
          # mv $GITHUB_WORKSPACE/2.patch /workdir/merlin
          cd /workdir/merlin
          # git apply 1.patch
          # git apply 2.patch
          cd ./release/src-rt-5.02axhnd.675x
          make rt-ax56u

      - uses: actions/upload-artifact@v3
        id: upload
        with:
          name: RT-AX56U.w
          path: /workdir/merlin/release/src-rt-5.02axhnd.675x/targets/**/*_cferom_pureubi.w

      - name: Remove obsolete firmwares on artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: "1 month"
          skip-recent: 2
