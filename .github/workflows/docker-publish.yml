name: Build Asuswrt

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Manually trigger'
        required: false

env:
  TZ: Europe/Copenhagen
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization of environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update -y
        sudo apt-get install git -y
        sudo apt-get install gitk -y
        sudo apt-get install -y -qq curl libtool-bin cmake libproxy-dev uuid-dev liblzo2-dev autoconf automake bash bison \
                     bzip2 diffutils file flex m4 g++ gawk groff-base libncurses5-dev libtool libslang2 make patch perl pkg-config shtool \
                     subversion tar texinfo zlib1g zlib1g-dev gettext libexpat1-dev libssl-dev cvs gperf unzip \
                     python3 libxml-parser-perl gcc-multilib gconf-editor libxml2-dev g++-multilib gitk libncurses5 mtd-utils \
                     libncurses5-dev libvorbis-dev autopoint autogen sed build-essential intltool libglib2.0-dev \
                     xutils-dev lib32z1-dev lib32stdc++6 xsltproc gtk-doc-tools libelf1:i386 locales bc rsync
        sudo apt-get autoremove --purge
        sudo apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo ln -s bash /bin/sh.bash 
        sudo mv /bin/sh.bash /bin/sh
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone --depth=1 https://github.com/RMerl/am-toolchains toolchain
        git clone --depth=1 https://github.com/RMerl/asuswrt-merlin.ng merlin 

    - name: Setting up toolchains
      run: |
        ln -s /workdir/toolchain/brcm-arm-hnd /opt/toolchains
        echo "export LD_LIBRARY_PATH=$LD_LIBRARY:/opt/toolchains/crosstools-arm-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/lib" >> ~/.profile
        echo "export TOOLCHAIN_BASE=/opt/toolchains" >> ~/.profile
        echo "PATH=\$PATH:/opt/toolchains/crosstools-arm-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/bin" >> ~/.profile
        echo "PATH=\$PATH:/opt/toolchains/crosstools-aarch64-gcc-9.2-linux-4.19-glibc-2.30-binutils-2.32/usr/bin" >> ~/.profile

    - name: Build
      run: |
        cd merlin/release/src-rt-5.02axhnd.675x
        make rt-ax56u

    - uses: actions/upload-artifact@v3
      id: upload
      with:
        name: RT-AX56U.trx
        path: merlin/release/src-rt-5.02axhnd.675x/image/*.trx

    - name: Remove obsolete firmwares on artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '1 month'
        skip-recent: 2